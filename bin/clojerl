#!/usr/bin/env sh
if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
  echo "Usage: `basename $0` [compile-opt*] [init-opt*] [main-opt] [arg*]

  -h, --help           Print this help message and exit
  -v                   Prints version and exits
  -c, --compile        Compile files

  compile-opt:
   -pa PATH            Adds PATH to the beginning of the code path
   -pz PATH            Adds PATH to the end of the code path
   -o PATH             Specify output directory for compiled files
   -t, --time          Print the time spent on compiling
   -vv, --verbose      Verbose compiling
   --to-core FILE      Output the Core Erlang representation to FILE
   FILES               List of .clje files

  init-opt:
   -i, --init path     Load a file or resource
   -e, --eval string   Eval exprs in string; print non-nil values

  main-opt:
   -m, --main ns-name  Call the -main function from namespace w/args
   -r, --repl          Run a repl
   path                Run a script from a file or resource
   -                   Run a script from standard input" >&2
  exit 0
fi

readlink_f () {
  cd "$(dirname "$1")" > /dev/null
  filename="$(basename "$1")"
  if [ -h "$filename" ]; then
    readlink_f "$(readlink "$filename")"
  else
    echo "`pwd -P`/$filename"
  fi
}

SELF=$(readlink_f "$0")
CLJE_BINDIR=$(dirname "$SELF")
CLJE_ROOT=$(dirname "$CLJE_BINDIR")

ERL_ARGS="$ERL_ARGS -s clojerl_cli start +pc unicode -noshell"

while [ "$#" -gt 0 ]
do
    key="$1"

    case $key in
        -pa)
            ERL_ARGS="$ERL_ARGS -pa $2"
            shift # past argument
            ;;
        -pz)
            ERL_ARGS="$ERL_ARGS -pz $2"
            shift # past argument
            ;;
        *)
            break;
            ;;
    esac
    shift # past argument or value
done

# When no arguments are provided just start the REPL
MAYBE_START_REPL=""
if [ 0 -eq $# ]; then
   MAYBE_START_REPL="-r";
fi

export ERL_LIBS="$CLJE_ROOT/_build/default/lib:$ERL_LIBS"
exec erl $ERL_ARGS -extra $MAYBE_START_REPL "$@"
