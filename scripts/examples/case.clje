(ns examples.case)

(let* [x :b
       y (case* x
                :a 1
                :b 2
                :c 3)
       z (case* y
                x 2
                #erl [:default :value])]
  (erlang/display x)
  (erlang/display y)
  (erlang/display z))

(def case-match-ignore
  (fn* [x]
       (case* x
              #erl[_ y _] y)))

;; First and third don't have to be equal
(let* [2 (case-match-ignore #erl[1 2 3])])

(def case-match
  (fn* [x]
       (case* x
              #erl[a y a] y)))

;; First and third don't have to be equal
(let* [2 (case-match #erl[1 2 1])])
