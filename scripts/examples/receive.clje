(ns examples.receive)

(def prn (fn* [x] (io/format "~s~n" #erl((clj_rt/str x)))))

(def inc (fn* [x] (erlang/+ x 1)))
(def dec (fn* [x] (erlang/- x 1)))

(def loop-fn
  (fn* [state]
    (receive*
     :inc
     (loop-fn (inc state))

     :dec
     (loop-fn (dec state))

     :print
     (do
       (prn state)
       (loop-fn state))

     #erl[:get pid]
     (do
       (erlang/send pid #erl[:acc state])
       (loop-fn state))

     _
     (loop-fn state))))

(let* [x (erlang/spawn (fn* [] (loop-fn 42)))
       self (erlang/self)]
  (erlang/send x :inc)
  (erlang/send x :inc)
  (erlang/send x :inc)
  (erlang/send x :print)
  (erlang/send x :dec)
  (erlang/send x :dec)
  (erlang/send x :dec)
  (erlang/send x :print)
  (erlang/send x #erl[:get self])
  (receive* msg (prn msg)))
