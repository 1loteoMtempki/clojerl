(ns examples.receive)

(def prn (fn* [x] (io/format "~s~n" #erl((clj_rt/str x)))))

(def inc (fn* [x] (erlang/+ x 1)))
(def dec (fn* [x] (erlang/- x 1)))

(def loop
  (fn* [state]
    (receive*
     x {:when (erlang/=:= x :inc)}
     (loop (inc state))

     x {:when (erlang/=:= x :dec)}
     (loop (dec state))

     x {:when (erlang/=:= x :print)}
     (do
       (prn state)
       (loop state))

     _
     (loop state))))

(def spawn
  (fn* [f & args]
       (erlang/spawn :clj_rt :apply #erl(f args))))

(let* [x (spawn loop 42)]
  (erlang/send x :inc)
  (erlang/send x :inc)
  (erlang/send x :inc)
  (erlang/send x :print)
  (erlang/send x :dec)
  (erlang/send x :dec)
  (erlang/send x :dec)
  (erlang/send x :print))
