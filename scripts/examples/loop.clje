(ns examples.loop)

(def prn (fn* [x] (io/format "~s~n" #erl((clj_rt/str x)))))

;; Use loop and recur

(loop* [x 1]
       (if (erlang/< x 10)
         (do
           (prn [:recur x])
           (recur (erlang/+ x 1)))
         (prn [:end x])))

;; Nested loops

(loop* [x 1]
       (if (erlang/< x 10)
         (do
           (prn [:outer-recur x])
           (recur (erlang/+ x 1)))
         (loop* [x :b x :a]
                (if (clj_rt/equiv x :a)
                  (do
                    (prn [:inner-recur x])
                    (recur :b :c))
                  (prn [:inner-end x])))))

(let* [f (fn* [x]
              (if (erlang/< 0 x)
                (do
                  (prn x)
                  (recur (erlang/- x 1)))
                x))]
      (prn (f 10)))

(def f-recur
  (fn* f-recur
    [x]
    (if (erlang/< 0 x)
      (do
        (prn [:f-recur x])
        (recur (erlang/- x 1)))
      x)))

(f-recur 5)
